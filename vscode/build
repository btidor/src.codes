#!/bin/bash

set -veu -o pipefail
shopt -s failglob

export PROJECT_BASE="$(dirname $(dirname $(realpath $0)))"
export BUILD_DIR="$PROJECT_BASE/_build"

export VSCODE_SOURCE="https://github.com/microsoft/vscode/archive/refs/tags/1.66.0.tar.gz"

# Install VS Code build dependencies
if [ -n "$(command -v apt)" ]; then
  sudo DEBIAN_FRONTEND=noninteractive apt install -y -q \
    build-essential g++ libx11-dev libxkbfile-dev libsecret-1-dev \
    python-is-python3
elif [ -n "$(command -v yum)" ]; then
  yum groupinstall -y "Development Tools"
  yum install -y libX11-devel.x86_64 libxkbfile-devel.x86_64 libsecret-devel
else
  echo "Unknown package manager: can't find apt or yum"
  exit 1
fi

# Download VS Code
if [ ! -d "$BUILD_DIR" ]; then
  mkdir "$BUILD_DIR"
  curl --location --no-progress-meter "$VSCODE_SOURCE" |
    tar zx --directory="$BUILD_DIR" --strip-components=1
fi

cd "$PROJECT_BASE/extension"
npm install
npm run vscode:prepublish

cd "$BUILD_DIR"

# Install yarn and dependencies
if [ -n "$(command -v sudo)" ]; then
  sudo npm install -g yarn
  yarn install
else
  # Vercel does not have or need sudo
  npm install -g yarn
  yarn install
fi

# Copy in the Explorer extension (built above)
rm -rf "$BUILD_DIR/extensions/distro-source-explorer"
cp -r "$PROJECT_BASE/extension" "$BUILD_DIR/extensions/distro-source-explorer"

# Apply patches
for patch in "$PROJECT_BASE"/vscode/*.patch; do
  if [ ! -f ".applied-$(basename $patch)" ]; then
    echo "$(basename $patch): applying..."
    patch --unified --strip=0 < "$patch"
    touch ".applied-$(basename $patch)"
  else
    echo "$(basename $patch): already applied"
  fi
done

# Insert product.json & extensions.json
export PRODUCT_TS="$BUILD_DIR/src/vs/platform/product/common/product.ts"
if [ ! -f "$PRODUCT_TS.orig" ]; then
  cp "$PRODUCT_TS" "$PRODUCT_TS.orig"
fi
cp "$PRODUCT_TS.orig" "$PRODUCT_TS"

"$PROJECT_BASE/vscode/inject-contents" "$PRODUCT_TS" \
  "$PROJECT_BASE/vscode/product.json"
sed -i "s/{{COMMIT}}/$(git rev-parse HEAD)/" "$PRODUCT_TS"
sed -i "s/{{DATE}}/$(date -Isec)/" "$PRODUCT_TS"

export EXTENSION_TS="$BUILD_DIR/src/vs/workbench/services/extensionManagement/browser/builtinExtensionsScannerService.ts"
if [ ! -f "$EXTENSION_TS.orig" ]; then
  cp "$EXTENSION_TS" "$EXTENSION_TS.orig"
fi
cp "$EXTENSION_TS.orig" "$EXTENSION_TS"

find extensions/ -maxdepth 1 -mindepth 1 -type d | \
  "$PROJECT_BASE/vscode/combine-extensions" > extensions.json
"$PROJECT_BASE/vscode/inject-contents" "$EXTENSION_TS" extensions.json

# Build VS Code; output is in $BUILD_DIR/out-vscode-web-min/
yarn gulp vscode-web
yarn gulp minify-vscode-web

cp "$PROJECT_BASE/vscode/index.html" "$BUILD_DIR/out-vscode-web-min/"
cp -r "$BUILD_DIR/extensions" "$BUILD_DIR/out-vscode-web-min/"
cp -r "$BUILD_DIR/remote/web/node_modules" "$BUILD_DIR/out-vscode-web-min/remote"

# Vercel chokes on broken symlinks; remove them here
find "$BUILD_DIR" -xtype l | xargs rm -f
