Customize the example commands shown in the background on startup.

--- src/vs/workbench/browser/parts/editor/editorGroupWatermark.ts	2023-05-13 23:33:03.591815658 +0000
+++ src/vs/workbench/browser/parts/editor/editorGroupWatermark.ts	2023-05-13 23:33:06.059863010 +0000
@@ -14,7 +14,7 @@
 import { append, clearNode, $, h } from 'vs/base/browser/dom';
 import { KeybindingLabel } from 'vs/base/browser/ui/keybindingLabel/keybindingLabel';
 import { CommandsRegistry } from 'vs/platform/commands/common/commands';
-import { ContextKeyExpr, ContextKeyExpression, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
+import { ContextKeyExpression, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';
 import { defaultKeybindingLabelStyles } from 'vs/platform/theme/browser/defaultStyles';

 interface WatermarkEntry {
@@ -33,10 +33,8 @@
 const openRecent: WatermarkEntry = { text: localize('watermark.openRecent', "Open Recent"), id: 'workbench.action.openRecent' };
 const newUntitledFileMacOnly: WatermarkEntry = { text: localize('watermark.newUntitledFile', "New Untitled Text File"), id: 'workbench.action.files.newUntitledFile', mac: true };
 const findInFiles: WatermarkEntry = { text: localize('watermark.findInFiles', "Find in Files"), id: 'workbench.action.findInFiles' };
-const toggleTerminal: WatermarkEntry = { text: localize({ key: 'watermark.toggleTerminal', comment: ['toggle is a verb here'] }, "Toggle Terminal"), id: 'workbench.action.terminal.toggleTerminal', when: ContextKeyExpr.equals('terminalProcessSupported', true) };
-const startDebugging: WatermarkEntry = { text: localize('watermark.startDebugging', "Start Debugging"), id: 'workbench.action.debug.start', when: ContextKeyExpr.equals('terminalProcessSupported', true) };
-const toggleFullscreen: WatermarkEntry = { text: localize({ key: 'watermark.toggleFullscreen', comment: ['toggle is a verb here'] }, "Toggle Full Screen"), id: 'workbench.action.toggleFullScreen' };
-const showSettings: WatermarkEntry = { text: localize('watermark.showSettings', "Show Settings"), id: 'workbench.action.openSettings' };
+const goToDefinition: WatermarkEntry = { text: localize('actions.goToDecl.label', "Go to Definition"), id: 'editor.action.revealDefinition' };
+const searchSymbols: WatermarkEntry = { text: localize('showTriggerActions', "Search All Symbols"), id: 'workbench.action.showAllSymbols' };

 const noFolderEntries = [
 	showCommands,
@@ -48,13 +46,11 @@
 ];

 const folderEntries = [
-	showCommands,
 	quickAccess,
 	findInFiles,
-	startDebugging,
-	toggleTerminal,
-	toggleFullscreen,
-	showSettings
+	goToDefinition,
+	searchSymbols,
+	showCommands,
 ];

 export class EditorGroupWatermark extends Disposable {
